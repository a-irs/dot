#compdef rmapi

_rmapi_remote() {
    local expl remfiles remdispf remdispd ret=1

    if zstyle -T ":completion:${curcontext}:files" remote-access; then
        remfiles=(${(f)"$(_call_program files rmapi ls $IPREFIX${PREFIX%%[^/]} | grep -E '^\[(d|f)]' | sed -E 's|^(\S+)\s+(.+)|\2\1|;s|\[d]$|/|;s|\[f]$||' | sort)"})
        remdispf=(${remfiles:#*/})
        remdispd=(${(M)remfiles:#*/})

        compset -P '*/'
        compset -S '/*'

        _tags remote-files
        while _tags; do
            while _next_label remote-files expl "remote-path"; do
                compadd     -d remdispf -- ${remdispf} && ret=0
                compadd -S/ -d remdispd -- ${remdispd%/} && ret=0
            done
            (( ret )) || return 0
        done
        return ret
    else
        _message -e remote-files 'remote file'
    fi
}

_rmapi() {
  local context state line
  typeset -A opt_args
  _arguments -C \
    '1:cmd:->cmds' \
    '*:: :->args' \
  && ret=0

  case "$state" in
    (cmds)
       local commands; commands=(
         'find:find dir [regexp]'
         'get:download'
         'ls:list'
         'mget:download directory'
         'put:upload'
         'rm:remove'
         'stat:show information'
       )
       _describe -t commands 'command' commands && ret=0
  ;;
  (args)
    case $words[1] in
      ls) _rmapi_remote ;;
      get|geta) _rmapi_remote ;;
      stat|ls|rm|find) _rmapi_remote ;;
      mkdir) _alternative "files:file:_rmapi_remote" ;;
      mget) _arguments "-o[output directory]:file:_files -/" "-i[incremental]" "*:: :_rmapi_remote" ;;
      put) _files -g "*.(pdf|epub|PDF|EPUB)" ;;
    esac
esac
}

_rmapi "$@"
