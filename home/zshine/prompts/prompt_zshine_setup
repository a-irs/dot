#!/usr/bin/env zsh

# ± ➤ → ⚡ ● » α λ ϟ ✯ ★ ➜ ↪ ▶ ► ↦ ⇆ φ └ > ★ ❯ ❱ ❩

case $HOST in
    srv1) ZSHINE_HOST_COLOR='magenta' ;;
    srv2) ZSHINE_HOST_COLOR='blue' ;;
    srv3) ZSHINE_HOST_COLOR='green' ;;
    *)    ZSHINE_HOST_COLOR='cyan' ;;
esac

ZSHINE_PROMPT_SYMBOL=❯
ZSHINE_PROMPT_COLOR=231

ZSHINE_GIT=1
ZSHINE_GIT_SHRINK_URL=1
ZSHINE_GIT_SYMBOL_UNTRACKED='?'
ZSHINE_GIT_SYMBOL_ADDED='+'
ZSHINE_GIT_SYMBOL_MODIFIED='±'
ZSHINE_GIT_SYMBOL_RENAMED='➜'
ZSHINE_GIT_SYMBOL_DELETED='ϟ'

ZSHINE_DATE=0
ZSHINE_USER=0

ZSHINE_BATTERY=0
ZSHINE_BATTERY_COLOR_LOW='yellow'
ZSHINE_BATTERY_COLOR_CRIT='red'
ZSHINE_BATTERY_COLOR_HIGH='green'
ZSHINE_BATTERY_COLOR_MED='white'

ZSHINE_JOBS=1
ZSHINE_JOBS_COLOR=magenta

ZSHINE_ERROR_COLOR='red'

ZSHINE_SSH_FG='231'
ZSHINE_SSH_BG='red'
ZSHINE_USER_FG='blue'
ZSHINE_USER_BG='237'
ZSHINE_PATH_FG=blue
ZSHINE_PATH_BG='238'
ZSHINE_PATH_FG_RO='232'
ZSHINE_PATH_BG_RO='cyan'
ZSHINE_GIT_SERVER_FG='yellow'
ZSHINE_GIT_SERVER_BG='238'
ZSHINE_GIT_PROJECT_FG='magenta'
ZSHINE_GIT_PROJECT_BG='237'
ZSHINE_GIT_COMMIT_FG='green'
ZSHINE_GIT_COMMIT_BG='238'
ZSHINE_GIT_PROTOCOL_FG='cyan'
ZSHINE_GIT_PROTOCOL_BG='237'
ZSHINE_GIT_BRANCH_FG='cyan'
ZSHINE_GIT_BRANCH_BG='237'
ZSHINE_GIT_DIRTY_FG='red'
ZSHINE_GIT_DIRTY_BG='237'
ZSHINE_VIRTUALENV_BG=214
ZSHINE_VIRTUALENV_FG=232
ZSHINE_SEGMENT_SYMBOL=''
ZSHINE_SEGMENT_RSYMBOL=''
ZSHINE_SEGMENT_RSEPARATOR=' '

if [[ "$TERM" == "linux" || (-z "$SSH_CONNECTION" && -z "$DISPLAY" && "$OSTYPE" != darwin*) ]]; then
    ZSHINE_SEGMENT_SYMBOL=''
    ZSHINE_SEGMENT_RSYMBOL=''
    ZSHINE_GIT_SYMBOL_MODIFIED='m'
    ZSHINE_BATTERY=1
    ZSHINE_DATE=1
    ZSHINE_SEGMENT_RSEPARATOR=' '
    ZSHINE_PATH_FG=231
    ZSHINE_PROMPT_SYMBOL='>'
fi

if [[ $UID == 0 ]]; then
    ZSHINE_USER=1
    ZSHINE_USER_COLOR='red'
    ZSHINE_USER_FG='red'
fi

#######################################
# powerline functions                 #
#######################################

ZSHINE_CURRENT_BG='NONE'

rprompt_segment() {
    [ -z "$3" ] && return
    echo -n "%{%F{$1}%}$ZSHINE_SEGMENT_RSYMBOL"
    echo -n "%{%K{$1}%}$ZSHINE_SEGMENT_RSEPARATOR"
    echo -n "%{%F{$2}%}$3$ZSHINE_SEGMENT_RSEPARATOR"
}

prompt_segment() {
    [ -z "$3" ] && return
    if [[ $ZSHINE_CURRENT_BG != 'NONE' && $1 != $ZSHINE_CURRENT_BG ]]; then
        echo -n " %B%{%K{$1}%F{$ZSHINE_CURRENT_BG}%}$ZSHINE_SEGMENT_SYMBOL%{%F{$2}%} "
    else
        echo -n "%B%{%K{$1}%}%{%F{$2}%} "
    fi
    ZSHINE_CURRENT_BG=$1
    echo -n $3
}

_prompt_end() {
    echo -n " %{%k%F{$ZSHINE_CURRENT_BG}%}$ZSHINE_SEGMENT_SYMBOL"
    echo -n "%{%f%}"
    ZSHINE_CURRENT_BG='NONE'
}


#######################################
# left prompt functions               #
#######################################

_prompt_git() {
    [[ $ZSHINE_GIT == 1 ]] && git_prompt_info 2> /dev/null
}

_prompt_ssh() {
    [[ ! "$SSH_CLIENT" && ! "$SSH_TTY" ]] && return
    ZSHINE_USER=1
    prompt_segment $ZSHINE_SSH_BG $ZSHINE_SSH_FG "SSH"
}

_prompt_virtualenv() {
    if [[ "$VIRTUAL_ENV" ]]; then
        prompt_segment "$ZSHINE_VIRTUALENV_BG" "$ZSHINE_VIRTUALENV_FG" "${VIRTUAL_ENV##*/}"
    fi
    if [[ "$IN_NIX_SHELL" ]]; then
        if [[ "$IN_NIX_SHELL" == pure ]]; then
            prompt_segment "$ZSHINE_VIRTUALENV_BG" "$ZSHINE_VIRTUALENV_FG" "nix"
        else
            prompt_segment "$ZSHINE_VIRTUALENV_BG" "$ZSHINE_VIRTUALENV_FG" "nix:${IN_NIX_SHELL}"
        fi
    fi
}

_prompt_path() {
    [[ ! -w ./ ]] && prompt_segment $ZSHINE_PATH_BG_RO $ZSHINE_PATH_FG_RO ro
    prompt_segment $ZSHINE_PATH_BG $ZSHINE_PATH_FG "${PWD/#$HOME/~}"
}

_prompt_user_host() {
    [[ $ZSHINE_USER == 0 ]] && return
    if [[ "$SSH_CLIENT" ]] || [[ "$SSH_TTY" ]]; then
        ZSHINE_USER=1
        prompt_segment $ZSHINE_USER_BG "" "%{%F{$ZSHINE_USER_FG}%}%n%{%F{$ZSHINE_HOST_COLOR}%}@%M"
    else
        prompt_segment $ZSHINE_USER_BG $ZSHINE_USER_FG "%n"
    fi
}

#######################################
# right prompt functions               #
#######################################

_rprompt_battery() {
    if [[ $ZSHINE_BATTERY == 1 ]]; then
        [ -d /sys/class/power_supply/BAT0 ] || return
        b_status=$(cat /sys/class/power_supply/BAT0/status)
        b_percent=$(cat /sys/class/power_supply/BAT0/capacity)
        [[ "$b_percent" -gt 100 ]] && b_percent=100

        if [[ "$b_percent" -le 19 ]]; then
            c=$ZSHINE_BATTERY_COLOR_CRIT
        elif [[ "$b_percent" -le 39 ]]; then
            c=$ZSHINE_BATTERY_COLOR_LOW
        elif [[ "$b_percent" -le 69 ]]; then
            c=$ZSHINE_BATTERY_COLOR_MED
        else
            c=$ZSHINE_BATTERY_COLOR_HIGH
        fi

        if [[ "$b_status" == Charging ]] || [[ "$b_status" == Full ]]; then
            t="$b_percent%%+"
        else
            t="$b_percent%%"
        fi
        rprompt_segment 237 "$c" "$t"
    fi
}

_prompt_jobs() {
    [[ $ZSHINE_JOBS == 1 ]] || return
    local m_stop="j"
    local m_run="&"
    local ret
    local -i detached_tmux=0
    detached_tmux+=$(tmux list-sessions 2> /dev/null | grep -cv 'attached')
    (( detached_tmux > 0 )) && ret="${ret}${detached_tmux}"
    local running=$(( $(jobs -r | wc -l) ))
    if [[ $running != 0 ]] ; then
        [[ -n "$ret" ]] && ret="${ret}|"
        ret="${ret}${running}${m_run}"
    fi
    local stopped=$(( $(jobs -s | wc -l) ))
    if [[ $stopped != 0 ]] ; then
        [[ -n "$ret" ]] && ret="${ret}|"
        ret="${ret}${stopped}${m_stop}"
    fi
    [[ -n "$ret" ]] && echo -n "%{%F{$ZSHINE_JOBS_COLOR}%}$ret %{%f%}"
}

_rprompt_date() {
    [[ "$ZSHINE_DATE" == 0 ]] && return
    rprompt_segment 238 white '%D{%H:%M}'
}

_prompt() {
    local s=""

    # show normal prompt or colored error prompt, depending on last return code
    s+="%(?"
    s+=".%{%B%F{$ZSHINE_PROMPT_COLOR}%}"
    s+=".%{%B%F{$ZSHINE_ERROR_COLOR}%}%? "
    s+=")"
    s+="$ZSHINE_PROMPT_SYMBOL%{%f%} "
    echo -n "$s"
}


#######################################
# init functions                      #
#######################################

_build_left() {
    printf '\n'
    _prompt_ssh
    _prompt_user_host
    _prompt_virtualenv
    _prompt_path
    _prompt_git
    _prompt_end
    printf '\n'
    _prompt_jobs
    _prompt
}

_build_right() {
    _rprompt_battery
    _rprompt_date
}

prompt_zshine_setup() {
    PROMPT='%{%f%b%k%}$(_build_left)%{%f%k%b%}'
    RPROMPT='%{%f%b%k%}$(_build_right)%{%f%k%b%}'
}

prompt_zshine_setup "$@"
