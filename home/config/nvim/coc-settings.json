{
    "yaml.format.enable": true,
    "yaml.schemas": {
        "https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json": ["ci/**/*.y*ml"],
        "kubernetes": [
            "manifests/**/*.y*ml",
            "dist/**/*.y*ml",
            "k8s.y*ml",
        ]
    },

    "codeLens.enable": true,
    "Lua.diagnostics.globals": ["vim", "awesome"],

    "ltex.enabled": false,
    "ltex.language": "en-US",
    "ltex.completionEnabled": true,
    "ltex.disabledRules": {
        "en-US": [
            // https://community.languagetool.org/rule/show/ARROWS?lang=en-US
            "ARROWS"
        ]
    },
    "ltex.additionalRules.motherTongue": "en-US",
    "ltex.additionalRules.enablePickyRules": true,

    "diagnostic-languageserver.formatFiletypes": {
      "sh": "shfmt"
    },
    "diagnostic-languageserver.formatters": {
      "shfmt": {
        "command": "shfmt",
        "args": ["--indent", "4", "--binary-next-line", "--case-indent"]
      }
    },

    "python.formatting.provider": "black",
    "snippets.ultisnips.directories": ["~/.vim/snip"],

    // enables semantic tokens for highlighting, see :CocCommand semanticTokens.checkCurrent
    "semanticTokens.enable": true,

    "suggest.noselect": true,
    "diagnostic.errorSign": "▪",
    "diagnostic.warningSign": "▪",
    "diagnostic.hintSign": "▪",
    "diagnostic.infoSign": "▪",

    // show error on whole line insteaf of just on broken chars
    "diagnostic.checkCurrentLine": true,

    "python.linting.ruffEnabled": true,
    "pyright.inlayHints.variableTypes": false,

    "outline.keepWindow": true,
    "outline.autoPreview": true,
    "outline.followCursor": true,
    "outline.showLineNumber": false,
    "outline.sortBy": "position",

    // https://github.com/neoclide/coc.nvim/wiki/Completion-with-sources#completion-sources
    "coc.source.around.priority": 3,
    "coc.source.buffer.priority": 2,

    "coc.source.dictionary.filetypes": ["markdown"],
    "coc.source.dictionary.priority": 1,

    "coc.source.word.filetypes": ["markdown"],
    "coc.source.word.priority": 0,
    "coc.source.word.shortcut": "dict",

    "languageserver": {
      "nim": {
        "command": "nimlsp",
        "filetypes": ["nim"]
      },
      "haskell": {
        "command": "haskell-language-server-wrapper",
        "args": ["--lsp"],
        "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
        "filetypes": ["haskell", "lhaskell"],
        "settings": {
          "haskell": {
            "plugin": {
              "stan": { "globalOn": false }
            }
          }
        }
      }
    }
}
