#!/usr/bin/env bash

# TODO how to rollback?

RETENTION=30
NOW=$(date +%F_%H-%M-%S)
KERNEL=$(uname -r); KERNEL=linux-${KERNEL##*-}

set -eu

# disable tool if already running from snapshot
if grep snapshots /proc/cmdline; then
    exit 1
fi

# setup + teardown
MOUNT="$(mktemp -d)"
root=$(awk '$1 ~ /^\/dev\// && $2 == "/" { print $1 }' /proc/mounts)
mount -o subvol=snapshots "$root" "$MOUNT"

cleanup() {
    umount "$MOUNT"
    rmdir "$MOUNT"
}
trap cleanup EXIT


btrfs-create-snapshot() {
    btrfs subvolume snapshot / "$MOUNT/root_$NOW"
}

create-uefi-bin() {
    sed -E "s|rootflags=\\S+|rootflags=subvol=snapshots/root_$NOW|g;s|resume=\\S+||g" /etc/kernel/cmdline > "$MOUNT/root_$NOW/etc/kernel/cmdline"
    echo "$(hostname)-$NOW" > "$MOUNT/root_$NOW/etc/hostname"
    mkinitcpio --cmdline "$MOUNT/root_$NOW/etc/kernel/cmdline" --uefi "/efi/EFI/Linux/archlinux_${KERNEL}_${NOW}.efi"
    sbctl sign "/efi/EFI/Linux/archlinux_${KERNEL}_${NOW}.efi"
}

delete-old-snapshots() {
    local retention=$1

    local to_delete=$(find "$MOUNT" -maxdepth 1 -type d -name "root_*" -mtime +"$retention" | sort)
    readarray -t to_delete <<< "$to_delete"
    for item in "${to_delete[@]}"; do
        [[ -z "$item" ]] || btrfs subvolume delete "$item"
    done
}

delete-old-uefi() {
    local retention=$1
    local to_delete=$(find /efi/EFI/Linux -type f -name "archlinux_${KERNEL}_*.efi" -mtime +"$retention" | sort)

    readarray -t to_delete <<< "$to_delete"
    for item in "${to_delete[@]}"; do
        [[ -z "$item" ]] || rm -fv "$item"
    done
}

list-snapshots() {
    ls -ld --color=always "$MOUNT"/root_* | cut -d' ' -f 6- | sed -E "s|$MOUNT/||"
}

main() {
    local action=${1:-backup}
    if [[ "$action" == list ]]; then
        list-snapshots
        exit
    elif [[ "$action" == backup ]]; then
        echo ":: Creating snapshot of root volume..."
        btrfs-create-snapshot > /dev/null
        echo
        echo ":: Creating bootable EFI executable..."
        create-uefi-bin > /dev/null
        echo
        echo ":: Cleanup after $RETENTION days..."
        delete-old-uefi "$RETENTION"
        delete-old-snapshots "$RETENTION"
        echo
        echo ":: List snapshots"
        list-snapshots
        echo
    fi
}

main "$@"
