#!/usr/bin/env bash

[[ $# -gt 0 && $1 == help ]] && { echo "$(basename "$0") sh|mount|list|check|info"; exit 2; }
[[ $EUID != 0 ]] && { exec sudo "$0" "$@"; }

set -u

MAIN_DIR=/mnt/data/crypt/borg
USER_HOST=root@backup
export BORG_REPO=$USER_HOST:$MAIN_DIR/$HOSTNAME

SSH_KEY=(
    /root/.ssh/id_backup
    /home/*/.ssh/id_me
)
for key in "${SSH_KEY[@]}"; do
    if [[ -e "$key" ]]; then
        SSH_KEY=$key
        break
    fi
done

if ! ssh -i "$SSH_KEY" $USER_HOST test -d "$MAIN_DIR"; then
    echo "$USER_HOST:$MAIN_DIR does not exist"
    /home/alex/.bin/pushover bash "ERROR: backup disk not mounted"
    exit 1
fi

export BORG_RSH="ssh -i ${SSH_KEY[0]}"
export BORG_CACHE_DIR=/var/cache/borg

## commands

if [[ $# -gt 0 ]]; then
    case $1 in
        mount|mnt) borg mount :: "$2" -o allow_other,ro; exit ;;
        check) borg check --verbose --info; exit ;;
        list|ls) borg list --verbose; exit ;;
        info) borg info; exit ;;
        sh) bash -c "env | grep ^BORG; bash"; exit ;;
    esac
fi

## backup

if ! ssh -i "$SSH_KEY" $USER_HOST test -f "$MAIN_DIR/$HOSTNAME/README"; then
    borg init --verbose --encryption none
fi

umask 077
mkdir -p /sysinfo
pacman -Qne > /sysinfo/pacman.txt
pacman -Qme > /sysinfo/pacman-aur.txt
lvs > /sysinfo/lvm-lv
pvs > /sysinfo/lvm-pv
vgs > /sysinfo/lvm-vg
blkid > /sysinfo/blkid
lsblk -f > /sysinfo/lsblk-f
lsblk > /sysinfo/lsblk
fdisk -l > /sysinfo/fdisk

luks_dev=$(lsblk -l -p -f | grep crypto_LUKS | head -1 | awk '{print $1}')
if [[ -n "$luks_dev" ]]; then
    cryptsetup luksDump "$luks_dev" > /sysinfo/luksDump 2>/dev/null
    cryptsetup luksHeaderBackup "$luks_dev" --header-backup-file /sysinfo/luksHeader 2>/dev/null
fi

date=$(date +%Y-%m-%d_%H-%M-%S)

borg create \
    --show-rc --list --filter=AME --stats --verbose \
    --patterns-from="$0.exclude" --one-file-system \
    --compression auto,zstd \
    --checkpoint-interval 60 \
    "$@" \
    "::data_${date}" \
    /home /srv /var /sysinfo /etc

borg prune --show-rc --stats --list \
    --glob-archives 'data_*' \
    --keep-within 12m || true

# TODO
# if [[ "$HOSTNAME" == x1 ]]; then
#     rsync --progress -avz -e "$BORG_RSH" --delete /home/alex/iphone-photos/ stor1:/media/data/photos/iphone
# fi
