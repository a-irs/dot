#!/usr/bin/env python3

import base64
import json
import sys
import datetime
import copy

def b64d(s):
    rem = len(s) % 4
    if rem > 0:
        s += "=" * (4 - rem)
    return base64.urlsafe_b64decode(s)

if len(sys.argv) > 1 and sys.argv[1] == "test":
    split = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWdkazcifQ.ewogImlzcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEzMTEyODA5NzAKfQ.ggW8hZ1EuVLuxNuuIJKX_V8a_OMXzR0EHR9R6jgdqrOOF4daGU96Sr_P6qJp6IcmD3HP99Obi1PRs-cwh3LO-p146waJ8IhehcwL7F09JdijmBqkvPeB2T9CJNqeGpe-gccMg4vfKjkM8FcGvnzZUN4_KSP0aAp1tOJ1zZwgjxqGByKHiOtX7TpdQyHE5lcMiKPXfEIQILVq0pc_E2DzL7emopWoaoZTF_m0_N0YzFC6g6EJbOEoRoSK5hoDalrcvRYLSrQAZZKflyuVCyixEoV9GfNQC3_osjzw2PAithfubEEBLuVVk4XUVrWOLrLl0nx7RkKU8NXNHq-rvKMzqg".split(".")
else:
    split = sys.stdin.read().split(".")

header, payload = [json.loads(b64d(b.strip())) for b in split[0:2]]
signature = b64d(split[2].strip())

def transform_payload(d: dict) -> dict:
    d = copy.copy(d)
    for key in d:
        # convert epoch to formatted time
        if isinstance(d[key], int) and 1_000_000_000 < d[key] < 3_000_000_000:
            d[key] = f"{datetime.datetime.fromtimestamp(d[key]).isoformat()} [converted from {d[key]}]"
    return d

output = {
    "header": header,
    "payload": transform_payload(payload),
    "signature": {
        "length": len(signature),
        "hex": signature.hex()[0:8] + "..." if len(signature) > 8 else signature.hex(),
    },
}

print()
print(json.dumps(output, indent=2))
