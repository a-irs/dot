#!/usr/bin/env bash

set -uo pipefail

type=$1

url_regex='https?://[-A-Za-z0-9+&@#/%?=~_|!:,.;]*[-A-Za-z0-9+&@#/%=~_|]'
ip_regex='[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}(:[0-9]{1,5})?(/\S+)*'
file_regex='[a-zA-Z0-9\-=&_@\.\$\\:/~\(\)]{5,}'  # names with len>6
case $type in
    all)
        pipe1=(rg -o '\S{5,}')  # anything with len>6
        pipe2=(cat)
        action() { echo -n "$1 " | tmux load-buffer -; tmux paste-buffer; }
        ;;
    url)
        pipe1=(rg -o "($url_regex|$ip_regex)")
        pipe2=(cat)
        action() {
            local url=$1
            [[ "$url" == "http"* ]] || url=http://"$url"
            open "$url" >/dev/null 2>&1 || xdg-open "$url" >/dev/null 2>&1
        }
        ;;
    default)
        pipe1=(rg -o "($file_regex|$url_regex)")
        pipe2=(sed -E 's/([\.:\(\)@]){1,2}$//g;s/^\(//g')  # remove special chars at the beginning and end
        action() { echo -n "$1 " | tmux load-buffer -; tmux paste-buffer; }
        ;;
esac

# TODO: add new mode to 'capture-pane -t <pane>' for another pane (+ list panes with preview?) or all panes
selected=$(tmux capture-pane -pJS - |
    "${pipe1[@]}" | "${pipe2[@]}" |
    awk 'length($0) >= 6' |  # make sure entries are still long enough after going through the pipeline
    tac |  # show last entries first in fzf
    awk '{ if (!seen[$0]++) print }' |  # dedup
    fzf-tmux -p 70% -- --no-sort --no-mouse --cycle --ansi --color=16 --inline-info)

if [[ -n "$selected" ]]; then
    action "$selected"
fi

exit 0
