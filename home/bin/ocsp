#!/usr/bin/env bash

# https://akshayranganath.github.io/OCSP-Validation-With-Openssl/
#
# usage:
# ocsp <certificate with authorityInfoAccess>
# ocsp <certificate without authorityInfoAccess> <intermediate CA>

set -euo pipefail

cert=$1

ok() { printf '\033[36m%s\033[0m\n' "$1"; }
debug() { printf '\033[1;30m%s\033[0m\n' "$1"; }
colorize() {
    GREP_COLOR=31 grep --color=always -e "^" -e "error" -i | \
    GREP_COLOR=32 grep --color=always -e "^" -e "OK"
}

ok "++ extract CA URL from certificate ext:authorityInfoAccess"
debug "openssl x509 -in \"$cert\" -noout -ext authorityInfoAccess"
printf '\n'
ca_url=$(openssl x509 -in "$cert" -noout -ext authorityInfoAccess 2>&1 | awk -F URI: '/CA Issuers - /{print $NF}')
if [[ -z "$ca_url" ]]; then
    ok "++ Error: No CA URL found in certificate extension, trying to use intermediate CA from \$2"
    ca=$2
    ok "++ CA info (from $ca)"
else
    ok "++ CA info (from $ca_url)"
    curl -LsfS "$ca_url" -o "ca.crt"
    ca=ca.crt
fi

debug "openssl x509 -subject -issuer -in \"$ca\" -noout"
openssl x509 -subject -issuer -in "$ca" -noout

printf '\n'
ok "++ CA verify (with system roots)"
debug "openssl verify -show_chain -verbose \"$ca\""
openssl verify -show_chain -verbose "$ca" 2>&1 | colorize || true

printf '\n'
ok "++ cert verify (with system roots)"
debug "openssl verify -show_chain -verbose \"$cert\""
openssl verify -show_chain -verbose "$cert" 2>&1 | colorize || true

ocsp_url=$(openssl x509 -in "$cert" -noout -ext authorityInfoAccess | awk -F URI: '/OCSP - /{print $NF}')

printf '\n'
ok "++ OCSP result ($ocsp_url)"
debug "openssl ocsp -issuer \"$ca\" -cert \"$cert\" -url \"$ocsp_url\""
openssl ocsp -issuer "$ca" -cert "$cert" -url "$ocsp_url" -req_text 2>&1 | colorize
