#!/usr/bin/env ruby

# TODO: luks
# TODO: put config in git
# install arch-chroot

require 'open3'
require 'yaml'
require 'json'
require 'ostruct'
require 'tmpdir'

CONF = JSON.parse(YAML::load(File.open('config.yml')).to_json, object_class: OpenStruct)

def cmd(s)
  puts s
  Open3.popen3(s) do |stdin, stdout, stderr, wait_thr|
      puts stdout.read
      puts stderr.read
      if not wait_thr.value.success? then
        raise "CmdException rc=#{wait_thr.value}"
      end
  end
end

def prepare(conf)
  # cmd("vgchange -a n vg_extsys || true")
  # cmd("pvscan --cache")

  # cmd("partprobe #{conf.dest.device}")
  # cmd("wipefs --all #{conf.dest.device}")
  # cmd("partprobe #{conf.dest.device}")

  # wipe disk
  cmd("sgdisk -Z #{conf.dest.device}")
  cmd("sgdisk -og #{conf.dest.device}")
  cmd("partprobe #{conf.dest.device}")

  # create partitions
  cmd("sgdisk -n 1:0:+100MB -c 1:\"EFI System Partition\" -t 1:ef00 #{conf.dest.device}")
  cmd("sgdisk -n 2:0:+0 -c 2:\"Linux LUKS\" -t 2:8309 #{conf.dest.device}")

  # format file systems
  cmd("mkfs.fat -F32 -n EXTSYS_BOOT #{conf.dest.device}-part1")
  cmd("mkfs.ext4 -L EXTSYS #{conf.dest.device}-part2")
end

def rsync(conf, mount)
  conf.copy.each do |item|
    rsync_command = "rsync -aHx --delete -v"
    item.exclude.each do |exclude|
      rsync_command = rsync_command + " --exclude #{exclude}"
    end
    rsync_command = "#{rsync_command} #{item.src}/ #{mount}/#{item.dest}"

    cmd(rsync_command)
  end
end

def write_fstab(conf, mount)
  s = %{
LABEL=EXTSYS / ext4 defaults 0 1
LABEL=EXTSYS_BOOT /boot vfat defaults 0 2
}
  File.write("#{mount}/etc/fstab", s)
end

def write_hostname(conf, mount)
  File.write("#{mount}/etc/hostname", "EXTSYS")
end

def write_grub(conf, mount)
  cmd("grub-install --target=x86_64-efi --recheck --removable --efi-directory=#{mount}/boot --boot-directory=#{mount}/boot")

  s = %{
  menuentry 'EXTSYS' {
    gfxmode text
    insmod gzio
    insmod part_gpt
    insmod fat
    set root='hd0,gpt1'
    search --no-floppy --label --set=root EXTSYS_BOOT
    linux /vmlinuz-linux root=LABEL=EXTSYS rw ipv6.disable=1
    initrd /initramfs-linux-fallback.img
  }
}
  File.write("#{mount}/boot/grub/grub.cfg", s)
end


prepare(CONF)

Dir.mktmpdir do |mount|
  cmd("mount /dev/disk/by-label/EXTSYS #{mount}")
  cmd("mkdir -p #{mount}/boot")
  cmd("mkdir -p #{mount}/home")
  cmd("mount /dev/disk/by-label/EXTSYS_BOOT #{mount}/boot")

  rsync(CONF, mount)
  write_fstab(CONF, mount)
  write_hostname(CONF, mount)
  write_grub(CONF, mount)

  cmd("umount -l #{mount}/boot")
  cmd("umount -l #{mount}")
end

