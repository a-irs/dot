#!/usr/bin/env bash

PATH=/usr/local/sbin:/usr/local/bin:/usr/bin

pre_lock() {
    logger -t "$(basename "$0")" --id=$$ -- "BAT0 before suspend: $(acpi -b | grep -Po '[0-9]+%')"
    killall keepassxc 2> /dev/null
}

post_lock() {
    keepassxc &
    logger -t "$(basename "$0")" --id=$$ -- "BAT0 after suspend: $(acpi -b | grep -Po '[0-9]+%')"
}

image=$(mktemp --suffix=.png)
trap 'rm -f "$image"' EXIT
make_screenshot() {
    import -window root "$image"

    # check brightness of image to check if to use dark or light icon
    brightness=$(convert "$image" -gravity center -crop 100x100+0+0 +repage -colorspace hsb \
        -resize 1x1 txt:- | awk -F '[%$]' 'NR==2{gsub(",",""); printf "%.0f\n", $(NF-1)}');
    if ((brightness > 60)); then
        icon=lock_black.png
    else
        icon=lock_white.png
    fi

    colors=(-modulate 75,60,100)  # brightness, saturation, hue (in percent)
    effect=(-scale 4% -scale 2510%)  # first*second has to equal 10000 (or just over it, to avoid some glitches)

    convert "$image" "${colors[@]}" "${effect[@]}" -gravity center "$HOME/.bin/lib/$icon" -composite "$image"
    printf '%s\n' "$image"
}

pre_lock

# inspired by /usr/share/doc/xss-lock/transfer-sleep-lock-i3lock.sh
if [[ -e /dev/fd/${XSS_SLEEP_LOCK_FD:--1} ]]; then
    kill_i3lock() { pkill -xu $EUID "$@" i3lock; }
    trap kill_i3lock TERM INT

    i3lock -i "$(make_screenshot)" --show-failed-attempts --ignore-empty-password {XSS_SLEEP_LOCK_FD}<&-
    exec {XSS_SLEEP_LOCK_FD}<&-
    while kill_i3lock -0; do sleep 0.1; done

else
    trap 'kill %%' TERM INT
    i3lock -i "$(make_screenshot)" --color=263657 --show-failed-attempts --ignore-empty-password
fi

post_lock
