#!/bin/sh
# ref: https://github.com/rebootuser/LinEnum/blob/master/LinEnum.sh#L485, https://gtfobins.github.io, https://book.hacktricks.xyz/linux-unix/linux-privilege-escalation-checklist

# minify (remove comment lines, remove blank lines, remove whitespace at beginning of line), then base64 and print deploy string
out=$(echo "echo $(tail -n +12 "$0" | sed -E '/^[ ]*#/d' | sed -E '/^$/d' | sed -E 's/^[ ]*//' | bzip2 | base64 -w 0)|base64 -d|bzcat|sh")
echo "$out"
echo "$out" | xclip -r -selection clipboard
echo ""
echo "copied to clipboard"
exit
###################################################################

log() {
    color=$1 && shift
    text=$*
    printf '\n%s\n\n' "$(tput setaf "$color")############# $text$(tput sgr0)"
}

logs() {
    color=$1 && shift
    text=$*
    printf '\n%s\n' "$(tput setaf "$color")$text$(tput sgr0)"
}

main() {
    uid=$(id -u)

    log 2 "system info"

    logs 3 "current user/groups info"
    w
    echo
    id

    logs 3 "non-system users (uid >= 1000)"
    awk -F: '$3 >= 1000 { print $1 }' /etc/passwd | grep -vE '^nobody$'

    logs 3 "users with interesting group memberships"
    for i in $(cut -d: -f1 /etc/passwd); do
        # https://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe
        id "$i" | grep -E '(adm|wheel|sudo|admin|disk|video|root|docker|lxd|lxc|shadow)'
    done

    logs 3 "environment"
    env | grep -vE '^(LS_COLORS)' | sort

    logs 3 "OS info"

    echo
    uname -a
    echo
    cat /proc/version
    echo
    cat /etc/*-release
    echo
    lastlog | grep -v "Never logged in"
    echo
    cat /proc/cmdline
    echo
    hostnamectl 2>/dev/null

    if test -e /.dockerenv || grep -q docker /proc/1/cgroup 2>/dev/null; then
        log "probably inside docker container"
    fi

    log 2 "\$HOME"
    find "$HOME" -ls 2>/dev/null

    log 2 "files or directories owned by my groups"
    for g in $(groups); do
        find / -group "$g" ! -type l \
        ! -path "$HOME" \
        ! -path "$HOME/*" \
        ! -path "/run/user/$uid/*" \
        ! -path "/sys/fs/cgroup/systemd/user.slice/user-$uid.slice/*" \
        ! -path "/sys/fs/cgroup/unified/user.slice/user-$uid.slice/*" \
        ! -path "/proc/*" \
        ! -path "/sys/fs/cgroup/memory/*" \
        ! -path /dev/full \
        ! -path /dev/mqueue \
        ! -path /dev/null \
        ! -path /dev/pts/ptmx \
        ! -path /dev/random \
        ! -path /dev/shm \
        ! -path /dev/tty \
        ! -path /dev/urandom \
        ! -path /dev/zero \
        -ls 2>/dev/null
    done

    log 2 "SUID"
    find / -perm -4000 \
        ! -path "*bin/at" \
        ! -path "*bin/chage" \
        ! -path "*bin/chfn" \
        ! -path "*bin/chsh" \
        ! -path "*bin/expiry" \
        ! -path "*bin/firejail" \
        ! -path "*bin/fusermount" \
        ! -path "*bin/fusermount3" \
        ! -path "*bin/gpasswd" \
        ! -path "*bin/ksu" \
        ! -path "*bin/mount" \
        ! -path "*bin/mount" \
        ! -path "*bin/newgidmap" \
        ! -path "*bin/newgrp" \
        ! -path "*bin/newuidmap" \
        ! -path "*bin/passwd" \
        ! -path "*bin/ping" \
        ! -path "*bin/ping6" \
        ! -path "*bin/pkexec" \
        ! -path "*bin/su" \
        ! -path "*bin/sudo" \
        ! -path "*bin/traceroute6.iputils" \
        ! -path "*bin/umount" \
        ! -path "*bin/vmware-user-suid-wrapper" \
        ! -path "*lib/*ssh/ssh-keysign" \
        ! -path "*lib/Xorg.wrap" \
        ! -path "*lib/chromium/chrome-sandbox" \
        ! -path "*lib/dbus-1.0/dbus-daemon-launch-helper" \
        ! -path "*lib/eject/dmcrypt-get-device" \
        ! -path "*lib/policykit-1/polkit-agent-helper-1" \
        ! -path "*lib/qemu/qemu-bridge-helper" \
        ! -path "*lib/snapd/snap-confine" \
        ! -path "*lib/virtualbox/*" \
        ! -path "*lib/x86_64-linux-gnu/lxc/lxc-user-nic" \
        ! -path "*lib/xorg/Xorg.wrap" \
        ! -path "/snap/*" \
        -ls 2>/dev/null

    log 2 "writable files outside of \$HOME"
    find / -writable ! -type l \
        ! -path "$HOME/*" \
        ! -path "$HOME" \
        ! -path "/run/user/$uid/*" \
        ! -path "/var/lib/lxcfs/cgroup/name=systemd/user.slice/user-$uid.slice/*" \
        ! -path "/sys/fs/cgroup/unified/user.slice/user-$uid.slice/*" \
        ! -path "/sys/fs/cgroup/systemd/user.slice/user-$uid.slice/*" \
        ! -path "/sys/fs/cgroup/unified/user.slice/user-$uid.slice/*" \
        ! -path "/proc/*" \
        ! -path "/sys/fs/cgroup/memory/*" \
        ! -path "/sys/kernel/security/apparmor/*" \
        ! -path /dev/full \
        ! -path /dev/mqueue \
        ! -path /dev/null \
        ! -path /dev/pts/ptmx \
        ! -path /dev/random \
        ! -path /dev/shm \
        ! -path /dev/tty \
        ! -path /dev/urandom \
        ! -path /dev/zero \
        -ls 2>/dev/null

    log 2 "bruteforce readable files"
    for d in /home/*; do
        [ "$HOME" = "$d" ] && continue
        for f in id_rsa id_ecdsa id_dsa id_ed25519 identity known_hosts; do
            cat "$f" 2>/dev/null
        done
    done

    log 2 "sensitive files outside of \$HOME"
    find / ! -path "$HOME" ! -path "$HOME/*" \( \
        -name "id_dsa*" -o \
        -name "id_rsa*" -o \
        -name "id_ecdsa*" -o \
        -name "id_ed25519*" -o \
        -name "authorized_hosts" -o \
        -name "authorized_keys" -o \
        -name "db.php" -o \
        -name "*_history" -o \
        -name "known_hosts" -o \
        -name "*.secret" -o \
        -name "*.key" -o \
        -name "config.php" -o \
        -name "users.php" -o \
        -path "/home/*" -o \
        -path "/usr/local/*bin/*" \
        \) -ls 2>/dev/null

    log 2 "readable sensitive paths (outside of \$HOME)"
    for x in /etc/shadow /etc/sudoers /etc/sudoers.d/* /home/* /root /var/mail/* $(find /var/mail -type f); do
        case $x in
            "$HOME") continue ;;
            "$HOME"/*) continue ;;
        esac
        test -r "$x" && ls -ld "$x"
    done

    log 2 "cron/timers"
    find /etc /var -name "cron*" -ls 2>/dev/null
    find /etc /var -name "anacron*" -ls 2>/dev/null
    systemctl list-timers --no-pager --all

    log 2 "writeable \$PATHs"
    for x in $(echo "$PATH" | tr ":" " "); do
        test -w "$x" && echo "$x"
    done

    log 2 "services"
    SYSTEMD_COLORS=1 systemctl --no-pager | grep --color=never running | grep -vE '(\.socket|\.scope|\.automount)'

    log 2 "sudo"
    echo '' | sudo -S -l -k 2>/dev/null
    sudo -l
}

main
