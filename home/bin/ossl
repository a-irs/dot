#!/usr/bin/env bash

set -euo pipefail

cmd() {
    >&2 echo ":: $*"
    eval "$*"
}

_parse-host() {
    host=$1
    port=443
    if [[ "$host" == http:* || "$host" == https:* ]]; then
        host=${host#*://}  # strip protocol://
    fi
    if [[ "$host" =~ .*:[0-9]+ ]]; then
        port=${host##*:}  # extract port
        host=${host%:*}  # remove port
    fi
}

_download-cert() {
    _parse-host "$1"  # set $host, $port

    file="$(mktemp).pem"
    trap "rm -f "$file"" EXIT

    >&2 echo ":: Downloading cert to $file"
    echo | cmd openssl s_client -servername "$host" -showcerts -connect "$host:$port" > "$file"
    >&2 echo ""
}

command-priv() { cmd openssl pkey -in "$file" "$@"; }

command-pub() { cmd openssl x509 -pubkey -noout -in "$file" "$@"; }

command-cert() { cmd openssl x509 -in "$file" "$@"; }

command-chain() { openssl crl2pkcs7 -nocrl -certfile "$file" "$@" | openssl pkcs7 -print_certs; }

command-text() {
    s "$file" "$@"
}

command-fp() {
    openssl x509 -noout -fingerprint -sha1 -in "$file" "$@"
    openssl x509 -noout -fingerprint -sha256 -in "$file" "$@"
}

command-connect() {
    host=$1 && shift
    port=$1 && shift
    echo | cmd openssl s_client -servername "$host" -connect "$host:$port" "$@"
}

command-dump() {
    tmp_dump=$(mktemp).der
    trap "rm -f $tmp_dump" EXIT

    openssl x509 -in "$file" -outform der -out "$tmp_dump" "$@"
    dumpasn1 -dpvz "$tmp_dump" | sed 's/\. /â”† /g'
}

help() {
    printf "%s\n\n" "$(tput setaf 1)Unknown command$(tput sgr0)"
    local name; name=$(basename "$0")
    echo "Available commands:"
    echo "  $name priv <file or host>"
    echo "  $name pub <file or host>"
    echo "  $name chain <file or host>"
    echo "  $name cert <file or host>"
    echo "  $name text <file or host>"
    echo "  $name dump <file or host>"
    echo "  $name fp <file or host>"
    echo "  $name connect <host>"
    echo "  $name ocsp <file> [<intermediate cert>]"
    echo ""
    echo "$(which openssl) version:"
    echo -n "  "; openssl version
    exit 127
}

if [[ "$#" -lt 2 ]]; then
    help
fi
action=$1 && shift
file=$1 && shift

case "$action" in
    priv|pub|chain|cert|text|dump|fp)
        if ! [[ -e "$file" || "$file" == *.pem || "$file" == *.crt || "$file" == *.der || "$file" == *.cer ]]; then
            _download-cert "$file"
        fi
        command-"$action" "$@" ;;
    ocsp)
        if [[ "$#" -eq 0 ]]; then
            ocsp "$file"
        elif [[ "$#" -eq 1 ]]; then
            ocsp "$file" "$1"
        fi
        ;;  # ~/.bin/ocsp
    connect)
        _parse-host "$file"
        connect "$host" "$port" "$@" ;;
    *)
        help
        ;;
esac
