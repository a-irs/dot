#!/usr/bin/env python3

import subprocess
import shlex
import json
import datetime
import time
import os

# TODO: skip on lockscreen

TERMINAL = "alacritty"
SHELL_TITLE = f"{os.getlogin()}@{os.uname()[1]}"
DIR = "/srv/splunk/input/workstats"


def parse_name(window_name, window_class):
    # browser
    if window_class.lower() == "firefox" and window_name.endswith("(Private Browsing)"):
        return "(Private Browsing)"

    return window_name


def parse_app(window_name, window_class):
    # plex
    if window_class.lower() == "firefox":
        if window_name.startswith("â–¶ ") or window_name.startswith("Plex - Mozilla Firefox"):
            return "plex"

    # virtual machines
    if window_class.lower() in ["virtualbox machine", "remote-viewer"]:
        return "VM: " + window_name.split()[0]

    return window_class.lower()

def get_os():
    if os.path.exists("/etc/NIXOS"):
        return "nixos"
    elif os.path.exists("/etc/arch-release"):
        return "arch"
    else:
        return "unknown"

def get_current_window():
    root = subprocess.Popen(shlex.split("bash -c \"xprop -id $(xprop -root 32x '\t$0' _NET_ACTIVE_WINDOW | cut -f 2) _NET_WM_NAME _NET_WM_DESKTOP WM_CLASS\""), stdout=subprocess.PIPE)
    stdout, stderr = root.communicate()

    lines = stdout.splitlines()
    if len(lines) < 3:
        # blank desktop
        return None

    window_class = ''.join(lines[2].decode().split("=")[1:]).strip().split(',')[-1].replace("\"", "").strip()
    window_name = ''.join(lines[0].decode().split("=")[1:]).strip()[1:-1].strip()
    desk = ''.join(lines[1].decode().split("=")[1:]).strip()
    output = {
        "_time": datetime.datetime.now().isoformat().split('.')[0],
        "name": parse_name(window_name, window_class),
        "desk": desk,
        "app": parse_app(window_name, window_class),
        "os": get_os()
    }
    return output


while True:
    time.sleep(1)
    today = str(datetime.datetime.now()).split(' ')[0]
    current_window = get_current_window()
    if current_window:
        with open(f'{DIR}/stats_{today}.json', 'a', encoding='utf-8') as fd:
            json.dump(current_window, fd, ensure_ascii=False)
            fd.write("\n")
